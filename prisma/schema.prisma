generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Genre {
  id     Int     @id @default(autoincrement())
  name   String? @db.VarChar(100)
  movies Movie[]

  @@map("genres")
}

model Language {
  id     Int     @id @default(autoincrement())
  name   String? @db.VarChar(100)
  movies Movie[]

  @@map("languages")
}

model Movie {
  id           Int       @id @default(autoincrement())
  title        String?   @db.VarChar(100)
  release_date DateTime? @db.Date
  genre_id     Int?
  language_id  Int?
  oscar_count  Int?
  duration     Int?
  createdById  Int?
  users        Users?    @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_created_by")
  genres       Genre?    @relation(fields: [genre_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_genre")
  languages    Language? @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_language")

  @@map("movies")
}

model Users {
  id       Int     @id @default(autoincrement())
  name     String  @db.VarChar(100)
  email    String  @unique @db.VarChar(100)
  password String  @db.VarChar(255)
  role     Role?   @default(USER)
  movies   Movie[]

  @@map("users")
}

enum Role {
  USER
  ADMIN
}
